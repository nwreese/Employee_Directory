{"version":3,"sources":["logo.svg","utils/api.js","components/sample.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","sample","state","peopleList","filteredPeopleList","keyword","filter","event","setState","target","value","newList","people","name","first","toLowerCase","includes","Sort","sort","a","b","email","API","then","data","console","log","results","type","onChange","this","Table","striped","bordered","hover","variant","onClick","map","src","picture","thumbnail","alt","last","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,8DCIA,EACC,WACZ,OAAOA,IAAMC,IAAI,2C,OC2FNC,E,4MAzFXC,MAAQ,CACJC,WAAY,GACZC,mBAAoB,GACpBC,QAAS,I,EAiBbC,OAAS,SAACC,GAGN,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAAOC,QAGtC,IAAIC,EAAU,EAAKT,MAAMC,WAAWG,QAAO,SAACM,GACxC,OAAQA,EAAOC,KAAKC,MAAMC,cAAcC,SAAST,EAAME,OAAOC,UAIlE,EAAKF,SAAS,CACVJ,mBAAoBO,K,EAK5BM,KAAO,SAACV,GACJ,IAAIJ,EAAa,EAAKD,MAAMC,WAC5BA,EAAWe,MAAK,SAACC,EAAEC,GACf,OAAID,EAAEE,MAAQD,EAAEC,OACJ,EAERF,EAAEE,MAAQD,EAAEC,MACL,OADX,KAIJ,EAAKb,SAAS,CAACJ,mBAAoBD,K,uDAzCvC,WAAqB,IAAD,OAEhBmB,IACCC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAKA,KAAKG,SAEtB,EAAKnB,SAAS,CACVL,WAAYqB,EAAKA,KAAKG,QACtBvB,mBAAoBoB,EAAKA,KAAKG,e,oBAoC1C,WACI,OACI,qCAEA,uBAAOC,KAAK,OAAOC,SAAUC,KAAKxB,SAElC,eAACyB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,UACA,gCACE,+BACE,uCACA,4CACA,2CACA,uCACA,wBAAQC,QAASN,KAAKb,KAAtB,0BAIJ,gCAEQa,KAAK5B,MAAME,mBAAmBiC,KAAI,SAACzB,GAC/B,OACI,+BACI,6BAAI,qBAAK0B,IAAK1B,EAAO2B,QAAQC,UAAWC,IAAI,mBAC5C,6BAAK7B,EAAOC,KAAKC,QACjB,6BAAKF,EAAOC,KAAK6B,OACjB,6BAAK9B,EAAOS,0B,GA5EvBsB,aCONC,MAVf,WACE,OAEE,qBAAKC,UAAU,MAAf,SAEA,cAAE,EAAF,OCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f15a032.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\r\n\r\nexport default {\r\n  getTenPeople: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=100\");\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nimport API from '../utils/api'\r\n\r\nclass sample extends Component {\r\n    state = {\r\n        peopleList: [],\r\n        filteredPeopleList: [],\r\n        keyword: \"\"\r\n      };\r\n\r\n    componentDidMount() {\r\n\r\n        API.getTenPeople()\r\n        .then((data) => {\r\n            console.log(data.data.results)\r\n\r\n            this.setState({\r\n                peopleList: data.data.results,\r\n                filteredPeopleList: data.data.results\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    filter = (event) => {\r\n\r\n        //update keyword\r\n        this.setState({ keyword: event.target.value });\r\n\r\n        // create new list based on keyword\r\n        let newList = this.state.peopleList.filter((people) => {\r\n            return (people.name.first.toLowerCase().includes(event.target.value))\r\n        })\r\n\r\n        // update the filteredList, which is the one being displayed in the table\r\n        this.setState({\r\n            filteredPeopleList: newList\r\n        })\r\n        \r\n    }\r\n\r\n    Sort = (event) => {\r\n        let peopleList = this.state.peopleList;\r\n        peopleList.sort((a,b) => {\r\n            if (a.email < b.email) {\r\n                return -1;\r\n            }\r\n            if (a.email > b.email) {\r\n                return 1;\r\n            }\r\n        })\r\n        this.setState({filteredPeopleList: peopleList})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            \r\n            <input type=\"text\" onChange={this.filter}></input>\r\n\r\n            <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>email \r\n                <button onClick={this.Sort}>Sort</button>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    this.state.filteredPeopleList.map((people) => {\r\n                        return (\r\n                            <tr>\r\n                                <td><img src={people.picture.thumbnail} alt=\"employee pic\"></img></td>\r\n                                <td>{people.name.first}</td>\r\n                                <td>{people.name.last}</td>\r\n                                <td>{people.email}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n              \r\n            </tbody>\r\n          </Table>\r\n          </>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default sample;","import logo from './logo.svg';\nimport './App.css';\nimport Sample from './components/sample';\n\nfunction App() {\n  return (\n  \n    <div className=\"App\">\n      \n    < Sample />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}